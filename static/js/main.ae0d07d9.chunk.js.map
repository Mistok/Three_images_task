{"version":3,"sources":["img/preloader.svg","img/nicky.jpg","Image.jsx","App.js","reportWebVitals.js","index.js"],"names":["Image","useState","isLoading","setIsLoading","error","setError","useEffect","isOdd","num","getTwoNumbers","fetch1","fetch","then","result","text","catch","fetch2","Promise","all","num1","num2","className","src","preloader","alt","defaultImage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAAe,G,MAAA,IAA0B,uCCA1B,MAA0B,kC,OCKlC,SAASA,IAAS,IAAD,EACcC,oBAAS,GADvB,mBACbC,EADa,KACFC,EADE,OAEMF,oBAAS,GAFf,mBAEbG,EAFa,KAENC,EAFM,KA2BpB,OAvBAC,qBAAU,WACN,IAAMC,EAAQ,SAAAC,GAAG,OAAIA,EAAM,IAAK,IACT,SAAjBC,IACF,IAAMC,EAASC,MAAM,0FAChBC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAM,OAAKA,KAChBE,OAAM,SAAAX,GAAK,OAAIC,EAASD,MAEvBY,EAASL,MAAM,0FAChBC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAM,OAAKA,KAChBE,OAAM,SAAAX,GAAK,OAAIC,EAASD,MAE7Ba,QAAQC,IAAI,CAAER,EAAQM,IACjBJ,MAAK,YAAqB,IAAD,mBAAjBO,EAAiB,KAAXC,EAAW,KACJb,EAAMY,IAASZ,EAAMa,GAC3BjB,GAAa,GAASM,OAErCM,OAAM,SAAAX,GAAK,OAAIC,EAASD,MAEjCK,KACF,IAGE,sBAAKY,UAAW,kBAAhB,UAEQnB,EACM,qBAAKmB,UAAW,SAAUC,IAAKC,EAAWC,IAAI,cAC9C,KAGLtB,EAEK,KADA,qBAAKmB,UAAW,gBAAiBC,IAAKG,EAAcD,IAAI,0BAGlE,8BAAMpB,GAAgB,QCvBnBsB,MAhBf,WAEI,OACI,sBAAKL,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,4BAGE,sBAAKA,UAAU,mBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCHDM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ae0d07d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/preloader.0bae5e82.svg\";","export default __webpack_public_path__ + \"static/media/nicky.0170edf5.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport './Image.css';\r\nimport preloader from \"./img/preloader.svg\";\r\nimport defaultImage from './img/nicky.jpg';\r\n\r\nexport function Image() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        const isOdd = num => num % 2 ===0;\r\n        const getTwoNumbers =  () => {\r\n            const fetch1 = fetch('https://www.random.org/integers/?num=1&min=1&max=10&col=1&base=10&format=plain&rnd=new')\r\n                .then(result => result.text())\r\n                .then(result => +result)\r\n                .catch(error => setError(error));\r\n\r\n            const fetch2 = fetch('https://www.random.org/integers/?num=1&min=1&max=10&col=1&base=10&format=plain&rnd=new')\r\n                .then(result => result.text())\r\n                .then(result => +result)\r\n                .catch(error => setError(error));\r\n\r\n            Promise.all([ fetch1, fetch2 ])\r\n                .then(([ num1, num2 ]) => {\r\n                    const isBothOdd = isOdd(num1) && isOdd(num2);\r\n                    isBothOdd ? setIsLoading(false) : getTwoNumbers()\r\n                })\r\n                .catch(error => setError(error));\r\n        };\r\n        getTwoNumbers();\r\n    },[]);\r\n\r\n    return (\r\n        <div className={'image_container'}>\r\n            {\r\n                isLoading\r\n                    ? <img className={'loader'} src={preloader} alt=\"preloader\" />\r\n                    : null\r\n            }\r\n            {\r\n                !isLoading\r\n                    ? <img className={'default_image'} src={defaultImage} alt=\"default image of Cage\" />\r\n                    : null\r\n            }\r\n            <div>{error ? error : ''}</div>\r\n        </div>\r\n    );\r\n}\r\n","\nimport './App.css';\nimport React from \"react\";\nimport {Image} from \"./Image\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n          <header className=\"header\">\n            Three pictures\n          </header>\n            <div className=\"images_container\">\n                <Image/>\n                <Image/>\n                <Image/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}